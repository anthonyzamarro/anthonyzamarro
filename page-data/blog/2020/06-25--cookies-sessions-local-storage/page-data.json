{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/2020/06-25--cookies-sessions-local-storage/","result":{"data":{"mdx":{"frontmatter":{"title":"Cookies vs. Sessions vs. Local Storage"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Cookies vs. Sessions vs. Local Storage\",\n  \"date\": \"2020-06-24T00:00:00.000Z\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h6\", null, \"date: 2020-06-24\"), mdx(\"p\", null, \"These are all terms you\\u2019ve probably heard before but didn\\u2019t quite know the difference between them. Here is a quick TLDR of the difference between cookies, session, and local storage\"), mdx(\"h2\", null, \"First, what\\u2019s the same?\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"All are used to store a user\\u2019s data on the client.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"All can be cleared manually in their respective ways.\")), mdx(\"h2\", null, \"Cookie\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Contains about 4kb of a user\\u2019s data\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The data stored in a cookie can be sent back to the server\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Has an expiration data which is set when the cookie is created and can be stored for an arbitrary length of time. By default, it is usually destroyed when the browser is closed\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Stores data in a key=value format\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Useful for transferring data between sessions and puts less burden on the server for things like authenticating whether a user is logged in or not.\")), mdx(\"h2\", null, \"Session\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Data stays in window/tab in which it is set.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Data doesn\\u2019t persist. It is lost when tab/window is closed.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Contains a session ID which is sent back to the server\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Helps server determine whether the user has an active connection or not\")), mdx(\"h2\", null, \"LocalStorage\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"An API to store data (up to 5mb) as a string in the user\\u2019s browser. \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Data is not sent back to server via HTTP request. \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Persists indefinitely until explicitly deleted via JavaScript or user clearing browser application storage. \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Uses same-origin policy\")), mdx(\"h3\", null, \"Sources:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://stackoverflow.com/questions/11142882/what-are-cookies-and-sessions-and-how-do-they-relate-to-each-other\"\n  }), \"https://stackoverflow.com/questions/11142882/what-are-cookies-and-sessions-and-how-do-they-relate-to-each-other\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://en.wikipedia.org/wiki/HTTP_cookie\"\n  }), \"https://en.wikipedia.org/wiki/HTTP_cookie\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"http://www.whatarecookies.com/\"\n  }), \"http://www.whatarecookies.com/\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://web.stanford.edu/~ouster/cgi-bin/cs142-fall10/lecture.php?topic=cookie\"\n  }), \"https://web.stanford.edu/~ouster/cgi-bin/cs142-fall10/lecture.php?topic=cookie\"))));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"date: 2020-06-24 These are all terms you’ve probably heard before but didn’t quite know the difference between them. Here is a quick TLDR of…"}},"pageContext":{"slug":"/blog/2020/06-25--cookies-sessions-local-storage/","id":"cb24a748-f1e5-5d8f-adb2-3c1a96a81edf"}}}